The adventure engine is a back end system for handling adventure games. As with
most of my modern works the code uses an expert system to do the dirty work.
This is because the expert system makes different aspects of the adventure game
easy to do. 

This includes inventory management, combination, and character interaction. All
of the information used to keep track of this information can be easily kept
track of through the use of facts and instances within the expert system. The
only part that has to be handled outside the expert system is things such as
input handling, sound playing, and drawing to the screen. 

The src folder contains the C source code that clips interacts with. The game
folder contains all of the types and game logic that are written within CLIPS

Unless otherwise stated, the engine code is licensed under the BSD license.


Folder layout:
native/ - contains all of the C code (including CLIPS)
tools/ - contains tools used by the adventure engine in one way or another
lib/ - contains all the functions, templates, and classes used by the adventure engine
logic/ - contains all the rules for the different modules that make up the adventure engine
init/ - contains a special module that contains all of the functions that
increase maintainability of code over using raw CLIPS. This is always loaded
first
